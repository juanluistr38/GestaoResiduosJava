name: Continuous Delivery

on:
  push:
    branches:
      - "feature/**"   git 

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    services:
      oracle:
        image: gvenzl/oracle-xe:21-slim
        ports:
          - 1521:1521
        env:
          ORACLE_PASSWORD: ${{ secrets.ORACLE_PASSWORD }}
          APP_USER: ${{ secrets.APP_USER }}
          APP_USER_PASSWORD: ${{ secrets.APP_USER_PASSWORD }}
        options: >-
          --health-cmd "exit 0"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Instalar netcat
        run: sudo apt-get install netcat -y

      - name: Aguardar o Oracle DB estar pronto
        run: |
          for i in {1..30}; do
            nc -zv localhost 1521 && break
            echo "Aguardando o Oracle DB iniciar..."
            sleep 10
          done

      - name: Configurar o Java 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Configurar variáveis de ambiente do Oracle
        run: |
          echo "SPRING_DATASOURCE_URL=jdbc:oracle:thin:@localhost:1521:XE" >> $GITHUB_ENV
          echo "SPRING_DATASOURCE_USERNAME=${{ secrets.APP_USER }}" >> $GITHUB_ENV
          echo "SPRING_DATASOURCE_PASSWORD=${{ secrets.APP_USER_PASSWORD }}" >> $GITHUB_ENV

      - name: Cache das dependências do Maven
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2-

      - name: Build com Maven
        env:
          SPRING_DATASOURCE_URL: ${{ env.SPRING_DATASOURCE_URL }}
          SPRING_DATASOURCE_USERNAME: ${{ env.SPRING_DATASOURCE_USERNAME }}
          SPRING_DATASOURCE_PASSWORD: ${{ env.SPRING_DATASOURCE_PASSWORD }}
        run: mvn clean package

      - name: Login no GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build e Push da imagem Docker
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/gestaoresiduos:latest

      # - name: Deploy para o servidor
      #   # Adicione aqui os passos para o deploy
